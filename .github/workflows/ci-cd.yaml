name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: customer-management-system
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set Spring Boot datasource env vars
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:h2:file:./data/customer-db;DB_CLOSE_DELAY=-1" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run the unit tests
        run: mvn test

      - name: Build and push the image
        run: |
          docker login --username bindudokala --password ${{secrets.CUSTOMER_ACCESS_TOKEN}} ghcr.io
          docker build -t ghcr.io/bindudokala/customer-app:latest --file Dockerfile .  
          docker push ghcr.io/bindudokala/customer-app:latest

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Set KUBECONFIG
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Deploy to Kubernetes
        if: github.event.inputs.deploy == 'true'
        run: |
          kubectl apply --validate=false -f deployment.yaml
